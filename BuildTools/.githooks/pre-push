#!/usr/bin/env bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"
protected_branches="^(master|develop|release-*|patch-*)"
allowed_branches="^(topics/.)"

IFS=' '
# check each branch being pushed
while read local_ref local_sha remote_ref remote_sha
do
	remote_branch=$(echo $remote_ref | sed -e 's,.*refs/heads/\(.*\),\1,')
	if [[ "$remote_branch" =~ $protected_branches ]]; then
		echo "Prevented to protected branch \"$remote_branch\" by pre-push hook!"
		exit 1
	fi
	if [[ "$remote_branch" =~ $allowed_branches ]]; then
		echo "Allowing branch \"$remote_branch\" by pre-push hook!"
	else
		echo "Preventing push to non topics branch: $remote_branch !"
		exit 1
	fi
done

exit 0
