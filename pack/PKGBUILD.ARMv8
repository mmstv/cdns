# Arch Linux (https://www.archlinux.org) packaging script.
# Cross compile on x86 Linux for ARMv8 Linux:
#       CARCH=aarch64 /usr/bin/makepkg --sign

_arch=aarch64
_target="${_arch}-linux-gnu"

pkgname=cdns
pkgver=1.0.0
pkgrel=1
pkgdesc="Cryptographic DNS resolver"
arch=("$_arch")
groups=('AUR')
url="https://github.com/mmstv/$pkgname"
license=('custom:ISC')
replaces=('dnscrypt-proxy' 'dnscrypt-wrapper')
makedepends=('ninja>=1.6' 'cmake>=3.9')
makedepends+=("${_target}-gcc" "${_target}-binutils")
makedepends+=("${_arch}-libsodium>=1.0.10" "${_arch}-libev>=4.24")

install='pkg.install'
backup=("etc/$pkgname/$pkgname.conf")
# can't use system stripper when cross-compiling
options=('!strip' '!buildflags') # '!staticlibs' '!emptydirs')

build() {
	mkdir -p _build
	cd _build
	# cmake picks up CFLAGS, CXXFLAGS, and LDFLAGS but not CPPFLAGS from the
	# environment
	# Do not use CXXFLAGS/CFLAGS from /etc/makepkg.conf when cross-compiling
	CXXFLAGS="$CPPFLAGS"
	unset CFLAGS
	local _curd=$(pwd)
	LDFLAGS+=" -Wl,-rpath-link,$_curd/lib"
	# default CMake GNU libdir is lib64
	cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_SBINDIR=bin -DCMAKE_INSTALL_LIBDIR=lib \
		-DCMAKE_INSTALL_SYSCONFDIR=/etc \
		-DBUILD_TESTING=OFF \
		-DCMAKE_EXPORT_COMPILE_COMMANDS=OFF \
		-DCMAKE_TOOLCHAIN_FILE=${startdir}/BuildTools/arm64-linux.cmake \
		${startdir}
	ninja
}

package() {
	depends=('libsodium>=1.0.10' 'systemd' 'libev>=4.24')
	export DESTDIR="$pkgdir"
	cd _build
	ninja install
}
